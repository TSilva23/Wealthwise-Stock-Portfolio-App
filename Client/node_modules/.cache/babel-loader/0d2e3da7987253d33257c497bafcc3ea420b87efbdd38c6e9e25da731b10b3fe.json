{"ast":null,"code":"var _jsxFileName = \"/home/tristan/Desktop/Capstone project/Wealthwise/my-app/Client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport axios from 'axios';\nimport StockDetails from './Components/Stockdetails';\nimport StockList from './Components/Stocklist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [stocks, setAllStocks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const parseCSV = csv => {\n    const lines = csv.split('\\n');\n    const result = [];\n    const headers = lines[0].split(',');\n    for (let i = 1; i < lines.length; i++) {\n      const obj = {};\n      const currentline = lines[i].split(',');\n      for (let j = 0; j < headers.length; j++) {\n        obj[headers[j]] = currentline[j];\n      }\n      result.push(obj);\n    }\n    return result;\n  };\n  useEffect(() => {\n    axios.get('/api/all-stocks', {\n      responseType: 'text'\n    }).then(response => {\n      try {\n        const parsedData = parseCSV(response.data);\n        setAllStocks(parsedData);\n      } catch (parseError) {\n        setError('Failed to parse stock data. Please try again later.');\n      }\n      setLoading(false);\n    }).catch(() => {\n      setError('Failed to load stocks. Please try again later.');\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(StockList, {\n          stocks: stocks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/stock/:symbol\",\n        element: /*#__PURE__*/_jsxDEV(StockDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l13Ybj3WGZLI1fxJdrmw4bEY1FM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","axios","StockDetails","StockList","jsxDEV","_jsxDEV","App","_s","stocks","setAllStocks","loading","setLoading","error","setError","parseCSV","csv","lines","split","result","headers","i","length","obj","currentline","j","push","get","responseType","then","response","parsedData","data","parseError","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/home/tristan/Desktop/Capstone project/Wealthwise/my-app/Client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport axios from 'axios';\nimport StockDetails from './Components/Stockdetails';\nimport StockList from './Components/Stocklist';\n\nfunction App() {\n  const [stocks, setAllStocks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const parseCSV = (csv) => {\n    const lines = csv.split('\\n');\n    const result = [];\n    const headers = lines[0].split(',');\n    for (let i = 1; i < lines.length; i++) {\n      const obj = {};\n      const currentline = lines[i].split(',');\n      for (let j = 0; j < headers.length; j++) {\n        obj[headers[j]] = currentline[j];\n      }\n      result.push(obj);\n    }\n    return result;\n  };\n\n  useEffect(() => {\n    axios.get('/api/all-stocks', { responseType: 'text' })\n      .then(response => {\n        try {\n          const parsedData = parseCSV(response.data);\n          setAllStocks(parsedData);\n        } catch (parseError) {\n          setError('Failed to parse stock data. Please try again later.');\n        }\n        setLoading(false);\n      })\n      .catch(() => {\n        setError('Failed to load stocks. Please try again later.');\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<StockList stocks={stocks} />} />\n        <Route path=\"/stock/:symbol\" element={<StockDetails />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
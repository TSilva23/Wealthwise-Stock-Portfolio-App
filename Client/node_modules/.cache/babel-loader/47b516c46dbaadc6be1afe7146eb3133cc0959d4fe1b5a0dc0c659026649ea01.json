{"ast":null,"code":"var _jsxFileName = \"/home/tristan/Desktop/Capstone project/Wealthwise/my-app/Client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport StockDetails from './Components/Stockdetails';\nimport AllStocksPage from './Components/Stocklist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction parseCSV(csvData) {\n  const rows = csvData.trim().split('\\n');\n  const headers = rows.shift().split(',');\n  return rows.map(row => {\n    const values = row.split(',');\n    return headers.reduce((object, header, index) => {\n      object[header] = values[index];\n      return object;\n    }, {});\n  });\n}\nfunction App() {\n  _s();\n  const [allStocks, setAllStocks] = useState(null);\n  useEffect(() => {\n    const fetchStocks = async () => {\n      try {\n        const response = await axios.get('/api/all-stocks', {\n          responseType: 'text'\n        });\n        // parseCSV is the function you will implement to parse the CSV data\n        const parsedData = parseCSV(response.data);\n        setAllStocks(parsedData);\n      } catch (error) {\n        console.error(\"Error fetching stocks:\", error);\n      }\n    };\n    fetchStocks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(AllStocksPage, {\n          stocks: allStocks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/stock/:symbol\",\n        element: /*#__PURE__*/_jsxDEV(StockDetails, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vI2DDtD2PaK8WB6cXz6zeDRXO4c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","BrowserRouter","Router","Route","Routes","StockDetails","AllStocksPage","jsxDEV","_jsxDEV","parseCSV","csvData","rows","trim","split","headers","shift","map","row","values","reduce","object","header","index","App","_s","allStocks","setAllStocks","fetchStocks","response","get","responseType","parsedData","data","error","console","children","path","element","stocks","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tristan/Desktop/Capstone project/Wealthwise/my-app/Client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport StockDetails from './Components/Stockdetails';\nimport AllStocksPage from './Components/Stocklist';\n\nfunction parseCSV(csvData) {\n  const rows = csvData.trim().split('\\n');\n  const headers = rows.shift().split(',');\n  \n  return rows.map(row => {\n      const values = row.split(',');\n      return headers.reduce((object, header, index) => {\n          object[header] = values[index];\n          return object;\n      }, {});\n  });\n}\n\nfunction App() {\n  const [allStocks, setAllStocks] = useState(null);\n\n  useEffect(() => {\n    const fetchStocks = async () => {\n      try {\n        const response = await axios.get('/api/all-stocks', { responseType: 'text' });\n        // parseCSV is the function you will implement to parse the CSV data\n        const parsedData = parseCSV(response.data);\n        setAllStocks(parsedData);\n      } catch (error) {\n        console.error(\"Error fetching stocks:\", error);\n      }\n    };\n\n    fetchStocks();\n  }, []);\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<AllStocksPage stocks={allStocks} />} />\n        <Route path=\"/stock/:symbol\" element={<StockDetails />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,aAAa,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAACC,OAAO,EAAE;EACzB,MAAMC,IAAI,GAAGD,OAAO,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC;EACvC,MAAMC,OAAO,GAAGH,IAAI,CAACI,KAAK,CAAC,CAAC,CAACF,KAAK,CAAC,GAAG,CAAC;EAEvC,OAAOF,IAAI,CAACK,GAAG,CAACC,GAAG,IAAI;IACnB,MAAMC,MAAM,GAAGD,GAAG,CAACJ,KAAK,CAAC,GAAG,CAAC;IAC7B,OAAOC,OAAO,CAACK,MAAM,CAAC,CAACC,MAAM,EAAEC,MAAM,EAAEC,KAAK,KAAK;MAC7CF,MAAM,CAACC,MAAM,CAAC,GAAGH,MAAM,CAACI,KAAK,CAAC;MAC9B,OAAOF,MAAM;IACjB,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,CAAC,CAAC;AACJ;AAEA,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAM6B,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,GAAG,CAAC,iBAAiB,EAAE;UAAEC,YAAY,EAAE;QAAO,CAAC,CAAC;QAC7E;QACA,MAAMC,UAAU,GAAGtB,QAAQ,CAACmB,QAAQ,CAACI,IAAI,CAAC;QAC1CN,YAAY,CAACK,UAAU,CAAC;MAC1B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDN,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnB,OAAA,CAACN,MAAM;IAAAiC,QAAA,eACL3B,OAAA,CAACJ,MAAM;MAAA+B,QAAA,gBACL3B,OAAA,CAACL,KAAK;QAACiC,IAAI,EAAC,GAAG;QAACC,OAAO,eAAE7B,OAAA,CAACF,aAAa;UAACgC,MAAM,EAAEb;QAAU;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjElC,OAAA,CAACL,KAAK;QAACiC,IAAI,EAAC,gBAAgB;QAACC,OAAO,eAAE7B,OAAA,CAACH,YAAY;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAAClB,EAAA,CA1BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
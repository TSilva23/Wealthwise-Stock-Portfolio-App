{"ast":null,"code":"var _jsxFileName = \"/home/tristan/Desktop/Capstone project/Wealthwise/my-app/Client/src/Components/Stockdetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Chart } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockDetails = () => {\n  _s();\n  const [originalData, setOriginalData] = useState([]);\n  const [error, setError] = useState('');\n  const {\n    symbol\n  } = useParams();\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        // Fetch the historical data for the stock\n        const response = await axios.get(`/api/stock/${symbol}`);\n        const weeklyTimeSeries = response.data['Weekly Time Series'];\n        const chartData = Object.entries(weeklyTimeSeries).map(([date, data]) => ({\n          date,\n          open: parseFloat(data['1. open']),\n          high: parseFloat(data['2. high']),\n          low: parseFloat(data['3. low']),\n          close: parseFloat(data['4. close']),\n          volume: parseFloat(data['5. volume'])\n        }));\n        setOriginalData(chartData);\n        setDetails(chartData[0]); // Assume the latest entry is the first one\n\n        // Fetch the latest quote for the stock\n        const quoteResponse = await axios.get(`/api/quote/${symbol}`);\n        const quoteData = quoteResponse.data['Global Quote'];\n        setLatestQuote({\n          open: parseFloat(quoteData['02. open']),\n          high: parseFloat(quoteData['03. high']),\n          low: parseFloat(quoteData['04. low']),\n          price: parseFloat(quoteData['05. price']),\n          volume: parseFloat(quoteData['06. volume']),\n          latestTradingDay: quoteData['07. latest trading day'],\n          previousClose: parseFloat(quoteData['08. previous close']),\n          change: parseFloat(quoteData['09. change']),\n          changePercent: quoteData['10. change percent']\n        });\n      } catch (error) {\n        console.error('Error fetching details:', error);\n        setError('Error fetching data. Please try again later.');\n      }\n    };\n    fetchDetails();\n  }, [symbol]);\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true\n      }\n    },\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          tooltipFormat: 'll'\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        beginAtZero: false,\n        title: {\n          display: true,\n          text: 'Price'\n        }\n      }\n    }\n  };\n  const chartData = {\n    labels: originalData.map(data => data.date),\n    datasets: [{\n      label: 'Open',\n      data: originalData.map(data => data.open),\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)'\n    }, {\n      label: 'Close',\n      data: originalData.map(data => data.close),\n      borderColor: 'rgb(54, 162, 235)',\n      backgroundColor: 'rgba(54, 162, 235, 0.5)'\n    }]\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error fetching data: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 21\n  }, this);\n  if (!originalData.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 36\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Historical Stock Performance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        type: \"line\",\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(StockDetails, \"qozsImGWBqLIt9f441oauUOXfEQ=\", false, function () {\n  return [useParams];\n});\n_c = StockDetails;\nexport default StockDetails;\nvar _c;\n$RefreshReg$(_c, \"StockDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","Chart","jsxDEV","_jsxDEV","StockDetails","_s","originalData","setOriginalData","error","setError","symbol","fetchDetails","response","get","weeklyTimeSeries","data","chartData","Object","entries","map","date","open","parseFloat","high","low","close","volume","setDetails","quoteResponse","quoteData","setLatestQuote","price","latestTradingDay","previousClose","change","changePercent","console","chartOptions","responsive","plugins","legend","display","scales","x","type","time","unit","tooltipFormat","title","text","y","beginAtZero","labels","datasets","label","borderColor","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","length","options","_c","$RefreshReg$"],"sources":["/home/tristan/Desktop/Capstone project/Wealthwise/my-app/Client/src/Components/Stockdetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Chart } from 'chart.js';\n\nconst StockDetails = () => {\n  const [originalData, setOriginalData] = useState([]);\n  const [error, setError] = useState('');\n  const { symbol } = useParams();\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        // Fetch the historical data for the stock\n        const response = await axios.get(`/api/stock/${symbol}`);\n        const weeklyTimeSeries = response.data['Weekly Time Series'];\n        const chartData = Object.entries(weeklyTimeSeries).map(([date, data]) => ({\n          date,\n          open: parseFloat(data['1. open']),\n          high: parseFloat(data['2. high']),\n          low: parseFloat(data['3. low']),\n          close: parseFloat(data['4. close']),\n          volume: parseFloat(data['5. volume']),\n        }));\n        setOriginalData(chartData);\n        setDetails(chartData[0]); // Assume the latest entry is the first one\n\n        // Fetch the latest quote for the stock\n        const quoteResponse = await axios.get(`/api/quote/${symbol}`);\n        const quoteData = quoteResponse.data['Global Quote'];\n        setLatestQuote({\n          open: parseFloat(quoteData['02. open']),\n          high: parseFloat(quoteData['03. high']),\n          low: parseFloat(quoteData['04. low']),\n          price: parseFloat(quoteData['05. price']),\n          volume: parseFloat(quoteData['06. volume']),\n          latestTradingDay: quoteData['07. latest trading day'],\n          previousClose: parseFloat(quoteData['08. previous close']),\n          change: parseFloat(quoteData['09. change']),\n          changePercent: quoteData['10. change percent'],\n        });\n      } catch (error) {\n        console.error('Error fetching details:', error);\n        setError('Error fetching data. Please try again later.');\n      }\n    };\n\n    fetchDetails();\n  }, [symbol]);\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n      },\n    },\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          tooltipFormat: 'll',\n        },\n        title: {\n          display: true,\n          text: 'Date',\n        },\n      },\n      y: {\n        beginAtZero: false,\n        title: {\n          display: true,\n          text: 'Price',\n        },\n      },\n    },\n  };\n\n  const chartData = {\n    labels: originalData.map(data => data.date),\n    datasets: [\n      {\n        label: 'Open',\n        data: originalData.map(data => data.open),\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      },\n      {\n        label: 'Close',\n        data: originalData.map(data => data.close),\n        borderColor: 'rgb(54, 162, 235)',\n        backgroundColor: 'rgba(54, 162, 235, 0.5)',\n      },\n    ],\n  };\n\n  if (error) return <div>Error fetching data: {error}</div>;\n  if (!originalData.length) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <h1>{symbol}</h1>\n      {/* ... other details */}\n      <div>\n        <h2>Historical Stock Performance</h2>\n        <Chart type=\"line\" data={chartData} options={chartOptions} />\n      </div>\n    </div>\n  );\n};\n\nexport default StockDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
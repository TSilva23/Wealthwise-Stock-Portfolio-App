{"ast":null,"code":"useEffect(() => {\n  const fetchPortfolio = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/portfolio`, {\n        headers: {\n          'Authorization': `Bearer ${userId}`\n        }\n      });\n      setPortfolio(response.data);\n    } catch (error) {\n      console.error('Error fetching portfolio:', error);\n      setError('Failed to load portfolio. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createPortfolio = async () => {\n    try {\n      setLoading(true);\n      await axios.post(`/api/portfolio/create`, null, {\n        headers: {\n          'Authorization': `Bearer ${userId}`\n        }\n      });\n      fetchPortfolio(); // Fetch the portfolio again after creating it\n    } catch (error) {\n      console.error('Error creating portfolio:', error);\n      setError('Failed to create portfolio. Please try again later.');\n      setLoading(false);\n    }\n  };\n  if (userId) {\n    fetchPortfolio();\n  } else {\n    setError('No user ID found. Please log in.');\n    setLoading(false);\n  }\n\n  // Create portfolio if it doesn't exist\n  if (portfolio.length === 0) {\n    createPortfolio();\n  }\n}, [userId]);","map":{"version":3,"names":["useEffect","fetchPortfolio","setLoading","response","axios","get","headers","userId","setPortfolio","data","error","console","setError","createPortfolio","post","portfolio","length"],"sources":["/home/tristan/Desktop/Capstone project/Wealthwise/my-app/Client/src/Components/Portfolio.js"],"sourcesContent":["useEffect(() => {\n  const fetchPortfolio = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/portfolio`, {\n        headers: {\n          'Authorization': `Bearer ${userId}`\n        }\n      });\n      setPortfolio(response.data);\n    } catch (error) {\n      console.error('Error fetching portfolio:', error);\n      setError('Failed to load portfolio. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const createPortfolio = async () => {\n    try {\n      setLoading(true);\n      await axios.post(`/api/portfolio/create`, null, {\n        headers: {\n          'Authorization': `Bearer ${userId}`\n        }\n      });\n      fetchPortfolio(); // Fetch the portfolio again after creating it\n    } catch (error) {\n      console.error('Error creating portfolio:', error);\n      setError('Failed to create portfolio. Please try again later.');\n      setLoading(false);\n    }\n  };\n\n  if (userId) {\n    fetchPortfolio();\n  } else {\n    setError('No user ID found. Please log in.');\n    setLoading(false);\n  }\n\n  // Create portfolio if it doesn't exist\n  if (portfolio.length === 0) {\n    createPortfolio();\n  }\n}, [userId]);\n"],"mappings":"AAAAA,SAAS,CAAC,MAAM;EACd,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACFC,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAE,gBAAe,EAAE;QACjDC,OAAO,EAAE;UACP,eAAe,EAAG,UAASC,MAAO;QACpC;MACF,CAAC,CAAC;MACFC,YAAY,CAACL,QAAQ,CAACM,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDE,QAAQ,CAAC,mDAAmD,CAAC;IAC/D,CAAC,SAAS;MACRV,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMW,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACFX,UAAU,CAAC,IAAI,CAAC;MAChB,MAAME,KAAK,CAACU,IAAI,CAAE,uBAAsB,EAAE,IAAI,EAAE;QAC9CR,OAAO,EAAE;UACP,eAAe,EAAG,UAASC,MAAO;QACpC;MACF,CAAC,CAAC;MACFN,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDE,QAAQ,CAAC,qDAAqD,CAAC;MAC/DV,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAIK,MAAM,EAAE;IACVN,cAAc,CAAC,CAAC;EAClB,CAAC,MAAM;IACLW,QAAQ,CAAC,kCAAkC,CAAC;IAC5CV,UAAU,CAAC,KAAK,CAAC;EACnB;;EAEA;EACA,IAAIa,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1BH,eAAe,CAAC,CAAC;EACnB;AACF,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}